model:
  class_path: rslearn.train.lightning_module.RslearnLightningModule
  init_args:
    model:
      class_path: rslearn.models.multitask.MultiTaskModel
      init_args:
        encoder:
          - class_path: rslearn.models.simple_time_series.SimpleTimeSeries
            init_args:
              encoder:
                class_path: rslearn.models.swin.Swin
                init_args:
                  pretrained: false
                  input_channels: 2
                  output_layers: [1, 3, 5, 7]
              image_channels: 2
              groups: [[0], [1, 2]]
          - class_path: rslearn.models.fpn.Fpn
            init_args:
              in_channels: [256, 512, 1024, 2048]
              out_channels: 256
        decoders:
          detect:
            - class_path: rslearn.models.faster_rcnn.FasterRCNN
              init_args:
                downsample_factors: [4, 8, 16, 32]
                num_channels: 256
                num_classes: 2
                anchor_sizes: [[32], [64], [128], [256]]
    lr: 0.0001
    plateau: true
    plateau_factor: 0.2
    plateau_patience: 2
    plateau_min_lr: 1e-6
    plateau_cooldown: 10
    restore_config:
      restore_path: /weka/dfive-default/rslearn-eai/artifacts/satlaspretrain_models/sentinel1_swinb_mi.pth
      remap_prefixes:
        - ["backbone.backbone.backbone.", "encoder.0.encoder.model."]
data:
  class_path: rslearn.train.data_module.RslearnDataModule
  init_args:
    path: /weka/dfive-default/rslearn-eai/datasets/sentinel1_vessels/dataset_v1/20250521/
    inputs:
      image_0:
        data_type: "raster"
        layers: ["sentinel1"]
        bands: ["vv", "vh"]
        passthrough: true
        dtype: FLOAT32
      image_1:
        data_type: "raster"
        layers: ["sentinel1_historical"]
        bands: ["vv", "vh"]
        passthrough: true
        dtype: FLOAT32
      image_2:
        data_type: "raster"
        layers: ["sentinel1_historical.1"]
        bands: ["vv", "vh"]
        passthrough: true
        dtype: FLOAT32
      mask:
        data_type: "raster"
        layers: ["mask"]
        bands: ["mask"]
        passthrough: true
        dtype: INT32
        is_target: true
      targets:
        data_type: "vector"
        layers: ["label"]
        is_target: true
    task:
      class_path: rslearn.train.tasks.multi_task.MultiTask
      init_args:
        tasks:
          detect:
            class_path: rslearn.train.tasks.detection.DetectionTask
            init_args:
              property_name: "category"
              classes: ["unknown", "vessel"]
              box_size: 15
              remap_values: [[0, 1], [0, 255]]
              image_bands: [1, 1, 1]
              exclude_by_center: true
              score_threshold: 0.9
              enable_map_metric: true
              enable_f1_metric: true
              f1_metric_thresholds: [[0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95], [0.1], [0.2], [0.3], [0.4], [0.5], [0.6], [0.7], [0.8], [0.9]]
              f1_metric_kwargs:
                cmp_mode: "distance"
                cmp_threshold: 15
                flatten_classes: true
        input_mapping:
          detect:
            targets: "targets"
    batch_size: 8
    num_workers: 32
    default_config:
      transforms:
        - class_path: rslearn.train.transforms.concatenate.Concatenate
          init_args:
            selections:
              image_0: []
              image_1: []
              image_2: []
            output_selector: image
        - class_path: rslearn.train.transforms.normalize.Normalize
          init_args:
            mean: 0
            std: 250
            valid_range: [0, 4]
        - class_path: rslp.transforms.mask.Mask
    train_config:
      patch_size: 512
      transforms:
        - class_path: rslearn.train.transforms.concatenate.Concatenate
          init_args:
            selections:
              image_0: []
              image_1: []
              image_2: []
            output_selector: image
        - class_path: rslearn.train.transforms.normalize.Normalize
          init_args:
            mean: 0
            std: 250
            valid_range: [0, 4]
        - class_path: rslp.transforms.mask.Mask
        - class_path: rslearn.train.transforms.flip.Flip
          init_args:
            image_selectors: ["image"]
            box_selectors: ["target/detect"]
      groups:
        - apr-2022-point-train_ascending
        - apr-2022-point-train_descending
        - jan-march-may-2022-point-train_ascending
        - jan-march-may-2022-point-train_descending
        - jun-2020-point-train_ascending
        - jun-2020-point-train_descending
        - jun-july-aug-2022-point-train_ascending
        - jun-july-aug-2022-point-train_descending
        - nov-2021-point-train_ascending
        - nov-2021-point-train_descending
    val_config:
      load_all_patches: true
      patch_size: 512
      groups:
        - apr-2022-point-val_ascending
        - apr-2022-point-val_descending
        - jan-march-may-2022-point-val_ascending
        - jan-march-may-2022-point-val_descending
        - jun-2020-point-val_ascending
        - jun-july-aug-2022-point-val_ascending
        - jun-july-aug-2022-point-val_descending
        - nov-2021-point-val_ascending
        - nov-2021-point-val_descending
    test_config:
      load_all_patches: true
      patch_size: 512
      groups:
        - apr-2022-point-val_ascending
        - apr-2022-point-val_descending
        - jan-march-may-2022-point-val_ascending
        - jan-march-may-2022-point-val_descending
        - jun-2020-point-val_ascending
        - jun-july-aug-2022-point-val_ascending
        - jun-july-aug-2022-point-val_descending
        - nov-2021-point-val_ascending
        - nov-2021-point-val_descending
    predict_config:
      transforms:
        - class_path: rslearn.train.transforms.concatenate.Concatenate
          init_args:
            selections:
              image_0: []
              image_1: []
              image_2: []
            output_selector: image
        - class_path: rslearn.train.transforms.normalize.Normalize
          init_args:
            mean: 0
            std: 250
            valid_range: [0, 4]
      groups: ["detector_predict"]
      load_all_patches: true
      skip_targets: true
      patch_size: 512
      overlap_ratio: 0.1
trainer:
  max_epochs: 500
  callbacks:
    - class_path: lightning.pytorch.callbacks.LearningRateMonitor
      init_args:
        logging_interval: "epoch"
    - class_path: rslearn.train.prediction_writer.RslearnWriter
      init_args:
        path: placeholder
        output_layer: output
        selector: ["detect"]
        merger:
          class_path: rslp.utils.nms.NMSDistanceMerger
          init_args:
            grid_size: 64
            distance_threshold: 10
            property_name: "category"  # same as task.property_name
            class_agnostic: false
    - class_path: lightning.pytorch.callbacks.ModelCheckpoint
      init_args:
        save_top_k: 1
        save_last: true
        monitor: val_detect/mAP
        mode: max
    - class_path: rslearn.train.callbacks.freeze_unfreeze.FreezeUnfreeze
      init_args:
        module_selector: ["model", "encoder", 0, "encoder", "model"]
        unfreeze_at_epoch: 4
rslp_project: sentinel1_vessels
rslp_experiment: data_20250521_model_20250530_satlaspretrain_unfreeze4_13
