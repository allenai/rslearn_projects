model:
  init_args:
    model:
      init_args:
        encoder:
          - class_path: rslearn.models.simple_time_series.SimpleTimeSeries
            init_args:
              encoder:
                class_path: rslearn.models.swin.Swin
                init_args:
                  pretrained: false
                  input_channels: 24
                  output_layers: [1, 3, 5, 7]
              image_channels: 24
data:
  init_args:
    inputs:
      s21:
        data_type: "raster"
        layers: ["sentinel2"]
        bands: ["B04", "B03", "B02", "B05", "B06", "B07", "B08", "B11", "B12"]
        passthrough: true
        dtype: FLOAT32
      s22:
        data_type: "raster"
        layers: ["sentinel2.1"]
        bands: ["B04", "B03", "B02", "B05", "B06", "B07", "B08", "B11", "B12"]
        passthrough: true
        dtype: FLOAT32
      s23:
        data_type: "raster"
        layers: ["sentinel2.2"]
        bands: ["B04", "B03", "B02", "B05", "B06", "B07", "B08", "B11", "B12"]
        passthrough: true
        dtype: FLOAT32
      s24:
        data_type: "raster"
        layers: ["sentinel2.3"]
        bands: ["B04", "B03", "B02", "B05", "B06", "B07", "B08", "B11", "B12"]
        passthrough: true
        dtype: FLOAT32
      landsat1:
        data_type: "raster"
        layers: ["landsat"]
        bands: ["B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11"]
        passthrough: true
        dtype: FLOAT32
      landsat2:
        data_type: "raster"
        layers: ["landsat.1"]
        bands: ["B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11"]
        passthrough: true
        dtype: FLOAT32
      landsat3:
        data_type: "raster"
        layers: ["landsat.2"]
        bands: ["B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11"]
        passthrough: true
        dtype: FLOAT32
      landsat4:
        data_type: "raster"
        layers: ["landsat.3"]
        bands: ["B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11"]
        passthrough: true
        dtype: FLOAT32
      s1a1:
        data_type: "raster"
        layers: ["sentinel1_ascending"]
        bands: ["vv", "vh"]
        passthrough: true
        dtype: FLOAT32
      s1a2:
        data_type: "raster"
        layers: ["sentinel1_ascending.1"]
        bands: ["vv", "vh"]
        passthrough: true
        dtype: FLOAT32
      s1a3:
        data_type: "raster"
        layers: ["sentinel1_ascending.2"]
        bands: ["vv", "vh"]
        passthrough: true
        dtype: FLOAT32
      s1a4:
        data_type: "raster"
        layers: ["sentinel1_ascending.3"]
        bands: ["vv", "vh"]
        passthrough: true
        dtype: FLOAT32
      s1d1:
        data_type: "raster"
        layers: ["sentinel1_descending"]
        bands: ["vv", "vh"]
        passthrough: true
        dtype: FLOAT32
      s1d2:
        data_type: "raster"
        layers: ["sentinel1_descending.1"]
        bands: ["vv", "vh"]
        passthrough: true
        dtype: FLOAT32
      s1d3:
        data_type: "raster"
        layers: ["sentinel1_descending.2"]
        bands: ["vv", "vh"]
        passthrough: true
        dtype: FLOAT32
      s1d4:
        data_type: "raster"
        layers: ["sentinel1_descending.3"]
        bands: ["vv", "vh"]
        passthrough: true
        dtype: FLOAT32
      mask:
        data_type: "raster"
        layers: ["mask"]
        bands: ["mask"]
        passthrough: true
        dtype: FLOAT32
        is_target: true
      targets:
        data_type: "raster"
        layers: ["label_raster"]
        bands: ["label"]
        dtype: INT32
        is_target: true
    default_config:
      transforms:
        - class_path: rslearn.train.transforms.normalize.Normalize
          init_args:
            mean: 0
            std: 10000
            valid_range: [0, 1]
            selectors: ["s21", "s22", "s23", "s24"]
        - class_path: rslearn.train.transforms.normalize.Normalize
          init_args:
            mean: 5000
            std: 20000
            valid_range: [0, 1]
            selectors: ["landsat1", "landsat2", "landsat3", "landsat4"]
        - class_path: rslearn.train.transforms.normalize.Normalize
          init_args:
            mean: 0
            std: 1
            valid_range: [0, 1]
            selectors: ["s1a1", "s1a2", "s1a3", "s1a4", "s1d1", "s1d2", "s1d3", "s1d4"]
        - class_path: rslearn.train.transforms.concatenate.Concatenate
          init_args:
            selections:
              s21: []
              landsat1: []
              s1a1: []
              s1d1: []
              s22: []
              landsat2: []
              s1a2: []
              s1d2: []
              s23: []
              landsat3: []
              s1a3: []
              s1d3: []
              s24: []
              landsat4: []
              s1a4: []
              s1d4: []
            output_selector: image
        - class_path: rslp.transforms.mask.Mask
    train_config:
      transforms:
        - class_path: rslearn.train.transforms.normalize.Normalize
          init_args:
            mean: 0
            std: 10000
            valid_range: [0, 1]
            selectors: ["s21", "s22", "s23", "s24"]
        - class_path: rslearn.train.transforms.normalize.Normalize
          init_args:
            mean: 5000
            std: 20000
            valid_range: [0, 1]
            selectors: ["landsat1", "landsat2", "landsat3", "landsat4"]
        - class_path: rslearn.train.transforms.normalize.Normalize
          init_args:
            mean: 0
            std: 1
            valid_range: [0, 1]
            selectors: ["s1a1", "s1a2", "s1a3", "s1a4", "s1d1", "s1d2", "s1d3", "s1d4"]
        - class_path: rslearn.train.transforms.concatenate.Concatenate
          init_args:
            selections:
              s21: []
              landsat1: []
              s1a1: []
              s1d1: []
              s22: []
              landsat2: []
              s1a2: []
              s1d2: []
              s23: []
              landsat3: []
              s1a3: []
              s1d3: []
              s24: []
              landsat4: []
              s1a4: []
              s1d4: []
            output_selector: image
        - class_path: rslp.transforms.mask.Mask
        - class_path: rslearn.train.transforms.flip.Flip
          init_args:
            image_selectors: ["image", "target/segment/classes", "target/segment/valid"]
