# Multi-dataset configuration for training on multiple datasets with different modalities
# This example shows how to use YAML references to avoid duplicating dataset configurations
model:
  class_path: rslearn.train.lightning_module.RslearnLightningModule
  init_args:
    model:
      class_path: rslearn.models.multitask.MultiTaskModel
      init_args:
        encoder:
          - class_path: rslp.helios.model.Helios
            init_args:
              checkpoint_path: "{CHECKPOINT_PATH}"
              selector: ["encoder"]
              forward_kwargs:
                patch_size: {PATCH_SIZE}
        decoders:
          # Decoder for Landsat vessel classification (2 classes)
          vessel_classification:
            - class_path: rslearn.models.pooling_decoder.PoolingDecoder
              init_args:
                in_channels: {ENCODER_EMBEDDING_SIZE}
                out_channels: 2
            - class_path: rslearn.train.tasks.classification.ClassificationHead
          # Decoder for Landsat vessel detection (2 classes)
          vessel_detection:
            - class_path: rslearn.models.faster_rcnn.FasterRCNN
              init_args:
                downsample_factors: [{PATCH_SIZE}]
                num_channels: {ENCODER_EMBEDDING_SIZE}
                num_classes: 2
                anchor_sizes: [[32]]
          # Decoder for mangrove classification (3 classes)
          mangrove_classification:
            - class_path: rslearn.models.pooling_decoder.PoolingDecoder
              init_args:
                in_channels: {ENCODER_EMBEDDING_SIZE}
                out_channels: 3
            - class_path: rslearn.train.tasks.classification.ClassificationHead
          # Decoder for crop type classification (8 classes)
          crop_type_classification:
            - class_path: rslearn.models.pooling_decoder.PoolingDecoder
              init_args:
                in_channels: {ENCODER_EMBEDDING_SIZE}
                out_channels: 8
            - class_path: rslearn.train.tasks.classification.ClassificationHead
    lr: 0.0001
    plateau: true
    plateau_factor: 0.2
    plateau_patience: 2
    plateau_min_lr: 0
    plateau_cooldown: 10

data:
  class_path: rslp.multi_dataset.data_module.MultiDatasetDataModule
  init_args:
    dataset_configs:
      - _ref: "/opt/data/helios/v2_landsat_vessels/finetune_classifier.yaml"
      - _ref: "/opt/data/helios/v2_landsat_vessels/finetune_detector.yaml"
      - _ref: "/opt/data/helios/v2_mangrove_classification/finetune_s2.yaml"
      - _ref: "/opt/data/helios/v2_nandi_crop_type/finetune_s2.yaml"
    batch_size: 8
    num_workers: 32

trainer:
  max_epochs: 100
  callbacks:
    - class_path: lightning.pytorch.callbacks.LearningRateMonitor
      init_args:
        logging_interval: "epoch"
    - class_path: lightning.pytorch.callbacks.ModelCheckpoint
      init_args:
        save_top_k: 1
        save_last: true
        monitor: val_loss
        mode: min
    - class_path: rslearn.train.callbacks.freeze_unfreeze.FreezeUnfreeze
      init_args:
        module_selector: ["model", "encoder", 0]
        unfreeze_at_epoch: 2

rslp_project: placeholder
rslp_experiment: placeholder 