model:
  class_path: rslearn.train.lightning_module.RslearnLightningModule
  init_args:
    model:
      class_path: rslearn.models.multitask.MultiTaskModel
      init_args:
        encoder:
          - class_path: rslp.helios.model.Helios
            init_args:
              checkpoint_path: "{CHECKPOINT_PATH}"
              selector: ["encoder"]
              forward_kwargs:
                patch_size: {PATCH_SIZE}
              random_initialization: true
        decoders:
          vessel_detection:
            - class_path: rslearn.models.faster_rcnn.FasterRCNN
              init_args:
                downsample_factors: [{PATCH_SIZE}]
                num_channels: {ENCODER_EMBEDDING_SIZE}
                num_classes: 2
                anchor_sizes: [[32]]
    lr: 0.0001
    scheduler:
      class_path: rslearn.train.scheduler.PlateauScheduler
      init_args:
        factor: 0.2
        patience: 2
        min_lr: 0
        cooldown: 10
data:
  class_path: rslearn.train.data_module.RslearnDataModule
  init_args:
    path: /weka/dfive-default/rslearn-eai/datasets/landsat_vessel_detection/detector/dataset_20250624
    inputs:
      image:
        data_type: "raster"
        layers: ["landsat"]
        bands: ["B8", "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B9", "B10", "B11"]
        passthrough: true
        dtype: FLOAT32
      mask:
        data_type: "raster"
        layers: ["mask"]
        bands: ["mask"]
        passthrough: true
        dtype: INT32
        is_target: true
      targets:
        data_type: "vector"
        layers: ["label"]
        is_target: true
    task:
      class_path: rslearn.train.tasks.multi_task.MultiTask
      init_args:
        tasks:
          vessel_detection:
            class_path: rslearn.train.tasks.detection.DetectionTask
            init_args:
              property_name: "category"
              classes: ["unknown", "vessel"]
              box_size: 15
              remap_values: [[0, 1], [0, 255]]
              exclude_by_center: true
              score_threshold: 0.7
              enable_map_metric: true
              enable_f1_metric: true
              f1_metric_thresholds: [[0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95]]
              f1_metric_kwargs:
                cmp_mode: "distance"
                cmp_threshold: 15
                flatten_classes: true
        input_mapping:
          vessel_detection:
            targets: "targets"
    batch_size: 8
    num_workers: 16
    default_config:
      transforms:
        - class_path: rslp.transforms.mask.Mask
        - class_path: rslearn.train.transforms.concatenate.Concatenate
          init_args:
            selections:
              image: []
            output_selector: landsat
        - class_path: rslp.helios.norm.HeliosNormalize
          init_args:
            config_fname: "/opt/helios/data/norm_configs/computed.json"
            band_names:
              landsat: ["B8", "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B9", "B10", "B11"]
    train_config:
      patch_size: 128
      load_all_patches: true
      groups: ["labels_utm"]
      tags:
        split: "train"
      transforms:
        - class_path: rslp.transforms.mask.Mask
        - class_path: rslearn.train.transforms.concatenate.Concatenate
          init_args:
            selections:
              image: []
            output_selector: landsat
        - class_path: rslp.helios.norm.HeliosNormalize
          init_args:
            config_fname: "/opt/helios/data/norm_configs/computed.json"
            band_names:
              landsat: ["B8", "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B9", "B10", "B11"]
    val_config:
      patch_size: 128
      load_all_patches: true
      groups: ["labels_utm"]
      tags:
        split: "val"
    test_config:
      patch_size: 128
      load_all_patches: true
      groups: ["labels_utm"]
      tags:
        split: "val"
trainer:
  max_epochs: 200
  callbacks:
    - class_path: lightning.pytorch.callbacks.LearningRateMonitor
      init_args:
        logging_interval: "epoch"
    - class_path: lightning.pytorch.callbacks.ModelCheckpoint
      init_args:
        save_top_k: 1
        save_last: true
        monitor: val_vessel_detection/mAP
        mode: max
rslp_project: placeholder
rslp_experiment: placeholder
