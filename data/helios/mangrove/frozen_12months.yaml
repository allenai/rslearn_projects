model:
  class_path: rslearn.train.lightning_module.RslearnLightningModule
  init_args:
    model:
      class_path: rslearn.models.multitask.MultiTaskModel
      init_args:
        encoder:
          - class_path: rslp.helios.model.Helios
            init_args:
              checkpoint_path: "{CHECKPOINT_PATH}"
              selector: ["encoder"]
              forward_kwargs:
                patch_size: {PATCH_SIZE}
        decoders:
          mangrove:
            - class_path: rslearn.models.pooling_decoder.PoolingDecoder
              init_args:
                in_channels: {ENCODER_EMBEDDING_SIZE}
                out_channels: 3
            - class_path: rslearn.train.tasks.classification.ClassificationHead
    lr: 0.0001
    plateau: true
    plateau_factor: 0.2
    plateau_patience: 2
    plateau_min_lr: 0
    plateau_cooldown: 10
data:
  class_path: rslearn.train.data_module.RslearnDataModule
  init_args:
    path: /weka/dfive-default/rslearn-eai/datasets/mangrove/classification/20250508
    inputs:
      sentinel2_l2a_mo01:
        data_type: "raster"
        layers: ["sentinel2_l2a_mo01"]
        bands: ["B02", "B03", "B04", "B08", "B05", "B06", "B07", "B8A", "B11", "B12", "B01", "B09"]
        passthrough: true
        dtype: FLOAT32
      sentinel2_l2a_mo02:
        data_type: "raster"
        layers: ["sentinel2_l2a_mo02"]
        bands: ["B02", "B03", "B04", "B08", "B05", "B06", "B07", "B8A", "B11", "B12", "B01", "B09"]
        passthrough: true
        dtype: FLOAT32
      sentinel2_l2a_mo03:
        data_type: "raster"
        layers: ["sentinel2_l2a_mo03"]
        bands: ["B02", "B03", "B04", "B08", "B05", "B06", "B07", "B8A", "B11", "B12", "B01", "B09"]
        passthrough: true
        dtype: FLOAT32
      sentinel2_l2a_mo04:
        data_type: "raster"
        layers: ["sentinel2_l2a_mo04"]
        bands: ["B02", "B03", "B04", "B08", "B05", "B06", "B07", "B8A", "B11", "B12", "B01", "B09"]
        passthrough: true
        dtype: FLOAT32
      sentinel2_l2a_mo05:
        data_type: "raster"
        layers: ["sentinel2_l2a_mo05"]
        bands: ["B02", "B03", "B04", "B08", "B05", "B06", "B07", "B8A", "B11", "B12", "B01", "B09"]
        passthrough: true
        dtype: FLOAT32
      sentinel2_l2a_mo06:
        data_type: "raster"
        layers: ["sentinel2_l2a_mo06"]
        bands: ["B02", "B03", "B04", "B08", "B05", "B06", "B07", "B8A", "B11", "B12", "B01", "B09"]
        passthrough: true
        dtype: FLOAT32
      sentinel2_l2a_mo07:
        data_type: "raster"
        layers: ["sentinel2_l2a_mo07"]
        bands: ["B02", "B03", "B04", "B08", "B05", "B06", "B07", "B8A", "B11", "B12", "B01", "B09"]
        passthrough: true
        dtype: FLOAT32
      sentinel2_l2a_mo08:
        data_type: "raster"
        layers: ["sentinel2_l2a_mo08"]
        bands: ["B02", "B03", "B04", "B08", "B05", "B06", "B07", "B8A", "B11", "B12", "B01", "B09"]
        passthrough: true
        dtype: FLOAT32
      sentinel2_l2a_mo09:
        data_type: "raster"
        layers: ["sentinel2_l2a_mo09"]
        bands: ["B02", "B03", "B04", "B08", "B05", "B06", "B07", "B8A", "B11", "B12", "B01", "B09"]
        passthrough: true
        dtype: FLOAT32
      sentinel2_l2a_mo10:
        data_type: "raster"
        layers: ["sentinel2_l2a_mo10"]
        bands: ["B02", "B03", "B04", "B08", "B05", "B06", "B07", "B8A", "B11", "B12", "B01", "B09"]
        passthrough: true
        dtype: FLOAT32
      sentinel2_l2a_mo11:
        data_type: "raster"
        layers: ["sentinel2_l2a_mo11"]
        bands: ["B02", "B03", "B04", "B08", "B05", "B06", "B07", "B8A", "B11", "B12", "B01", "B09"]
        passthrough: true
        dtype: FLOAT32
      sentinel2_l2a_mo12:
        data_type: "raster"
        layers: ["sentinel2_l2a_mo12"]
        bands: ["B02", "B03", "B04", "B08", "B05", "B06", "B07", "B8A", "B11", "B12", "B01", "B09"]
        passthrough: true
        dtype: FLOAT32
      label:
        data_type: "vector"
        layers: ["label"]
        is_target: true
    task:
      class_path: rslearn.train.tasks.multi_task.MultiTask
      init_args:
        tasks:
          mangrove:
            class_path: rslearn.train.tasks.classification.ClassificationTask
            init_args:
              property_name: "category"
              classes: ["Mangrove", "Water", "Other"]
              enable_f1_metric: true
              metric_kwargs:
                average: "micro"
        input_mapping:
          mangrove:
            label: "targets"
    batch_size: 16
    num_workers: 32
    default_config:
      transforms:
      - class_path: rslearn.train.transforms.concatenate.Concatenate
        init_args:
          selections:
            sentinel2_l2a_mo01: []
            sentinel2_l2a_mo02: []
            sentinel2_l2a_mo03: []
            sentinel2_l2a_mo04: []
            sentinel2_l2a_mo05: []
            sentinel2_l2a_mo06: []
            sentinel2_l2a_mo07: []
            sentinel2_l2a_mo08: []
            sentinel2_l2a_mo09: []
            sentinel2_l2a_mo10: []
            sentinel2_l2a_mo11: []
            sentinel2_l2a_mo12: []
          output_selector: sentinel2_l2a
      - class_path: rslp.helios.norm.HeliosNormalize
        init_args:
          config_fname: "/opt/helios/data/norm_configs/computed.json"
          band_names:
            sentinel2_l2a: ["B02", "B03", "B04", "B08", "B05", "B06", "B07", "B8A", "B11", "B12", "B01", "B09"]
    train_config:
      groups: ["sample_100K"]
      tags:
        split: "train"
    val_config:
      groups: ["sample_100K"]
      tags:
        split: "val"
    test_config:
      groups: ["sample_100K"]
      tags:
        split: "val"
trainer:
  max_epochs: 300
  callbacks:
    - class_path: lightning.pytorch.callbacks.LearningRateMonitor
      init_args:
        logging_interval: "epoch"
    - class_path: lightning.pytorch.callbacks.ModelCheckpoint
      init_args:
        save_top_k: 1
        save_last: true
        monitor: val_loss
        mode: min
    - class_path: rslearn.train.callbacks.freeze_unfreeze.FreezeUnfreeze
      init_args:
        module_selector: ["model", "encoder", 0]
rslp_project: helios_finetuning
rslp_experiment: placeholder
