model:
  class_path: rslearn.train.lightning_module.RslearnLightningModule
  init_args:
    model:
      class_path: rslearn.models.multitask.MultiTaskModel
      init_args:
        encoder:
          - class_path: rslearn.models.satlaspretrain.SatlasPretrain
            init_args:
              model_identifier: "Aerial_SwinB_SI"
        decoders:
          segment:
            - class_path: rslearn.models.unet.UNetDecoder
              init_args:
                in_channels: [[4, 128], [8, 256], [16, 512], [32, 1024]]
                out_channels: 8
            - class_path: rslearn.train.tasks.segmentation.SegmentationHead
    lr: 0.0001
    plateau_factor: 0.1
    plateau_patience: 10
    plateau_min_lr: 0
    plateau_cooldown: 0
    freeze_configs:
      - prefixes: ["model.encoder."]
data:
  class_path: rslearn.train.data_module.RslearnDataModule
  init_args:
    root_dir: /data/favyenb/maldives_ecosystem_mapping_data/rslearn_dataset/
    inputs:
      image:
        data_type: "raster"
        layers: ["maxar"]
        bands: ["R", "G", "B"]
        passthrough: true
      targets:
        data_type: "raster"
        layers: ["label"]
        bands: ["label"]
        is_target: true
    task:
      class_path: rslearn.train.tasks.multi_task.MultiTask
      init_args:
        tasks:
          segment:
            class_path: rslearn.train.tasks.segmentation.SegmentationTask
            init_args:
              num_classes: 8
              remap_values: [[0, 1], [0, 255]]
        input_mapping:
          segment:
            targets: "targets"
    batch_size: 32
    num_workers: 32
    default_config:
      transforms:
        - class_path: rslearn.train.transforms.normalize.Normalize
          init_args:
            mean: 0
            std: 255
    train_config:
      patch_size: 64
      transforms:
        - class_path: rslearn.train.transforms.normalize.Normalize
          init_args:
            mean: 0
            std: 255
        - class_path: rslearn.train.transforms.flip.Flip
          init_args:
            image_selectors: ["image", "target/segment/classes", "target/segment/valid"]
      groups: ["crops"]
      tags:
        split: train
    val_config:
      patch_size: 256
      groups: ["crops"]
      tags:
        split: val
    test_config:
      patch_size: 256
      groups: ["crops"]
      tags:
        split: val
    predict_config:
      groups: ["images"]
      load_all_patches: true
      skip_targets: true
      patch_size: 512
trainer:
  logger:
    class_path: lightning.pytorch.loggers.WandbLogger
    init_args:
      project: rslearn-maldives-ecosystem-mapping
      log_model: "all"
      name: satlaspretrain_flip
  max_epochs: 50
  callbacks:
    - class_path: lightning.pytorch.callbacks.LearningRateMonitor
      init_args:
        logging_interval: "epoch"
    - class_path: rslearn.train.prediction_writer.RslearnWriter
      init_args:
        root_dir: /data/favyenb/maldives_ecosystem_mapping_data/rslearn_dataset/
        output_layer: output
        selector: ["segment"]
#  limit_train_batches: 64
