model:
  class_path: rslearn.train.lightning_module.RslearnLightningModule
  init_args:
    model:
      class_path: rslearn.models.singletask.SingleTaskModel
      init_args:
        encoder:
          - class_path: rslp.helios.model.Helios
            init_args:
              checkpoint_path: "/weka/dfive-default/helios/checkpoints/yawenzzzz/latent_mim_cross_random_per_modality_patchdisc_add_contrastive_0.1_1/step400000"
              selector: ["encoder"]
              forward_kwargs:
                patch_size: 4
        decoder:
          - class_path: rslearn.models.pooling_decoder.PoolingDecoder
            init_args:
              in_channels: 768
              num_conv_layers: 0
              num_fc_layers: 0
              out_channels: 39
          - class_path: rslearn.train.tasks.classification.ClassificationHead
    optimizer:
      class_path: rslearn.train.optimizer.AdamW
      init_args:
        lr: 0.0001
    scheduler:
      class_path: rslearn.train.scheduler.PlateauScheduler
      init_args:
        factor: 0.2
        patience: 2
        min_lr: 0
        cooldown: 10
data:
  class_path: rslearn.train.data_module.RslearnDataModule
  init_args:
    path: /weka/dfive-default/rslearn-eai/datasets/alphaearth_supplemental_evaluations/us_trees
    inputs:
      sentinel2_l2a:
        data_type: "raster"
        layers: ["sentinel2", "sentinel2.1", "sentinel2.2", "sentinel2.3", "sentinel2.4", "sentinel2.5", "sentinel2.6", "sentinel2.7", "sentinel2.8", "sentinel2.9", "sentinel2.10", "sentinel2.11"]
        bands: ["B02", "B03", "B04", "B08", "B05", "B06", "B07", "B8A", "B11", "B12", "B01", "B09"]
        passthrough: true
        load_all_layers: true
      # Include gse here so it's a required layer, even though we don't actually need it.
      # This way we match the windows that gse.yaml model will train/validate on.
      gse_ignored:
        data_type: "raster"
        layers: ["gsegood"]
        bands: ["A00", "A01", "A02", "A03", "A04", "A05", "A06", "A07", "A08", "A09", "A10", "A11", "A12", "A13", "A14", "A15", "A16", "A17", "A18", "A19", "A20", "A21", "A22", "A23", "A24", "A25", "A26", "A27", "A28", "A29", "A30", "A31", "A32", "A33", "A34", "A35", "A36", "A37", "A38", "A39", "A40", "A41", "A42", "A43", "A44", "A45", "A46", "A47", "A48", "A49", "A50", "A51", "A52", "A53", "A54", "A55", "A56", "A57", "A58", "A59", "A60", "A61", "A62", "A63"]
        passthrough: true
      targets:
        data_type: "vector"
        layers: ["label"]
        is_target: true
    task:
      class_path: rslearn.train.tasks.classification.ClassificationTask
      init_args:
        property_name: "label"
        classes:
          - abies
          - acer
          - aesculus
          - ailanthus
          - alnus
          - amelanchier
          - asimina
          - betula
          - carya
          - cercis
          - cornus
          - diospyros
          - elaeagnus
          - fagus
          - gleditsia
          - ilex
          - juglans
          - juniperus
          - liquidambar
          - liriodendron
          - maclura
          - magnolia
          - morus
          - picea
          - pinus
          - populus
          - prosopis
          - prunus
          - pseudotsuga
          - quercus
          - sabal
          - salix
          - sassafras
          - taxodium
          - thuja
          - triadica
          - tsuga
          - ulmus
          - yucca
        enable_f1_metric: true
        metric_kwargs:
          average: "macro"
    batch_size: 16
    num_workers: 32
    default_config:
      transforms:
        - class_path: rslp.helios.norm.HeliosNormalize
          init_args:
            config_fname: "/opt/helios/data/norm_configs/computed.json"
            band_names:
              sentinel2_l2a: ["B02", "B03", "B04", "B08", "B05", "B06", "B07", "B8A", "B11", "B12", "B01", "B09"]
        - class_path: rslearn.train.transforms.pad.Pad
          init_args:
            size: 8
            mode: "center"
            image_selectors: ["sentinel2_l2a"]
    train_config:
      groups: ["train"]
    val_config:
      groups: ["test"]
    test_config:
      groups: ["test"]
trainer:
  max_epochs: 100
  callbacks:
    - class_path: lightning.pytorch.callbacks.LearningRateMonitor
      init_args:
        logging_interval: "epoch"
    - class_path: lightning.pytorch.callbacks.ModelCheckpoint
      init_args:
        save_top_k: 1
        save_last: true
        monitor: val_loss
        mode: min
    - class_path: rslearn.train.callbacks.freeze_unfreeze.FreezeUnfreeze
      init_args:
        module_selector: ["model", "encoder", 0]
rslp_project: 2025_08_28_aef_linear_probe
rslp_experiment: us_trees_helios_01
