model:
  class_path: rslearn.train.lightning_module.RslearnLightningModule
  init_args:
    model:
      class_path: rslearn.models.multitask.MultiTaskModel
      init_args:
        encoder:
          - class_path: rslearn.models.swin.Swin
            init_args:
              pretrained: true
              input_channels: 12
              output_layers: [3]
        decoders:
          detect:
            - class_path: rslearn.models.conv.Conv
              init_args:
                in_channels: 256
                out_channels: 192
                kernel_size: 3
            - class_path: rslearn.models.conv.Conv
              init_args:
                in_channels: 192
                out_channels: 192
                kernel_size: 3
            - class_path: rslearn.models.faster_rcnn.FasterRCNN
              init_args:
                downsample_factors: [8]
                num_channels: 192
                num_classes: 3
                anchor_sizes: [[32]]
    lr: 0.0001
    plateau: true
    plateau_factor: 0.2
    plateau_patience: 2
    plateau_min_lr: 0
    plateau_cooldown: 10
data:
  class_path: rslearn.train.data_module.RslearnDataModule
  init_args:
    path: gs://rslearn-eai/datasets/marine_infra/dataset_v1/20241210/
    inputs:
      sentinel2_l2a:
        data_type: "raster"
        layers: ["sentinel2"]
        bands: ["B02", "B03", "B04", "B08", "B05", "B06", "B07", "B8A", "B11", "B12", "B01", "B09"]
        passthrough: true
        dtype: FLOAT32
      targets:
        data_type: "vector"
        layers: ["label"]
        is_target: true
    task:
      class_path: rslearn.train.tasks.multi_task.MultiTask
      init_args:
        tasks:
          detect:
            class_path: rslp.satlas.train.MarineInfraTask
            init_args:
              property_name: "category"
              classes: ["unknown", "platform", "turbine"]
              box_size: 15
              remap_values: [[0, 0.25], [0, 255]]
              image_bands: [2, 1, 0]
              exclude_by_center: true
              enable_map_metric: true
              enable_f1_metric: true
              f1_metric_thresholds: [[0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95], [0.1], [0.2], [0.3], [0.4], [0.5], [0.6], [0.7], [0.8], [0.9]]
              skip_unknown_categories: true
              f1_metric_kwargs:
                cmp_mode: "distance"
                cmp_threshold: 15
                flatten_classes: true
        input_mapping:
          detect:
            targets: "targets"
    batch_size: 4
    num_workers: 32
    default_config:
      transforms:
        - class_path: rslp.helios.norm.HeliosNormalize
          init_args:
            config_fname: "/data/favyenb/helios/data/norm_configs/computed.json"
            band_names:
              sentinel2_l2a: ["B02", "B03", "B04", "B08", "B05", "B06", "B07", "B8A", "B11", "B12", "B01", "B09"]
        # Copy to "image" key so it can be used by Faster R-CNN head.
        - class_path: rslearn.train.transforms.concatenate.Concatenate
          init_args:
            selections:
              sentinel2_l2a: []
            output_selector: image
    train_config:
      patch_size: 256
      tags:
        split: train
    val_config:
      patch_size: 256
      tags:
        split: val
    test_config:
      patch_size: 256
      tags:
        split: val
trainer:
  max_epochs: 500
  callbacks:
    - class_path: lightning.pytorch.callbacks.LearningRateMonitor
      init_args:
        logging_interval: "epoch"
    - class_path: rslearn.train.prediction_writer.RslearnWriter
      init_args:
        path: placeholder
        output_layer: output
        selector: ["detect"]
    - class_path: lightning.pytorch.callbacks.ModelCheckpoint
      init_args:
        save_top_k: 1
        save_last: true
        monitor: val_detect/mAP
        mode: max
rslp_project: helios_finetuning
rslp_experiment: marine_infra_imagenet_12
