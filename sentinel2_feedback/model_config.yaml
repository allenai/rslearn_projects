model:
  class_path: rslearn.train.lightning_module.RslearnLightningModule
  init_args:
    model:
      class_path: rslearn.models.multitask.MultiTaskModel
      init_args:
        encoder:
          - class_path: rslearn.models.swin.Swin
            init_args:
              input_channels: 3
              output_layers: [1, 3, 5, 7]
              pretrained: true
        decoders:
          class:
            - class_path: rslearn.models.pooling_decoder.PoolingDecoder
              init_args:
                in_channels: 1024
                out_channels: 2
            - class_path: rslearn.train.tasks.classification.ClassificationHead
    lr: 0.0001
    plateau_factor: 0.1
    plateau_patience: 10
    plateau_min_lr: 0
    plateau_cooldown: 0
data:
  class_path: rslearn.train.data_module.RslearnDataModule
  init_args:
    path: /Users/mikej/ai2/rslearn_projects/sentinel2_feedback/rslearn_data
    inputs:
      image:
        data_type: "raster"
        layers: ["sentinel2"]
        bands: ["R", "G", "B"]
        passthrough: true
      label:
        data_type: "vector"
        layers: ["label"]
    task:
      class_path: rslearn.train.tasks.multi_task.MultiTask
      init_args:
        tasks:
          class:
            class_path: rslearn.train.tasks.classification.ClassificationTask
            init_args:
              property_name: "label"
              classes: ["GOOD", "BAD"]
              metric_kwargs:
                average: "micro" # makes the wandb accurancy metric more readable
        input_mapping:
          class:
            label: "targets"
    batch_size: 64
    num_workers: 32
    default_config:
      transforms:
        - class_path: rslearn.train.transforms.normalize.Normalize
          init_args:
            mean: 0
            std: 255
trainer:
  max_epochs: 50
  callbacks:
  - class_path: lightning.pytorch.callbacks.LearningRateMonitor
    init_args:
      logging_interval: "epoch"
rslp_project: sentinel2_feedback
rslp_experiment: sentinel2_20240903_experiment1
